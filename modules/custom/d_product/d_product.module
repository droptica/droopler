<?php

/**
 * @file
 * File containing d_product module.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;
use Drupal\d_product\Entity\Product;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_theme().
 */
function d_product_theme() {
  return [
    'd_product_gallery' => [
      'render element' => 'element',
      'variables' => [
        'single_items' => NULL,
        'nav_items' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function d_product_preprocess_node(&$variables) {
  $node = $variables['node'];
  if ($node->getType() == 'd_product') {
    if (isset($variables['view_mode']) && $variables['view_mode'] == 'teaser') {
      if (isset($variables['node'])) {

        if (isset($variables['content']['field_d_product_media'][0])) {
          $variables['main_image'] = $variables['content']['field_d_product_media'][0];
          unset($variables['content']['field_d_product_media']);
        }

        if (isset($variables['content']['field_product_categories'][0])) {
          $variables['category'] = $variables['content']['field_product_categories'];
          unset($variables['content']['field_product_categories']);
        }

        if (isset($variables['content']['field_d_product_link'])) {
          $variables['link'] = $variables['content']['field_d_product_link'];
          unset($variables['content']['field_d_product_link']);
        }
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function d_product_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Add placeholder to contact form.
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-products-list-products-list') {
    $form['aggregated_field']['#attributes']['placeholder'] = t('Search products...');
    $form['sort_by']['#title'] = '';
    $form['sort_by']['#attributes']['placeholder'] = t('Placeholder');
    unset($form['sort_order']);
    $query = \Drupal::request()->query->all();
    if (isset($query['f'])) {
      foreach ($query['f'] as $key => $value) {
        $form['f[' . $key . ']'] = [
          '#type' => 'hidden',
          '#value' => $value,
          '#weight' => -1,
        ];
      }
    }
  }
  if ($form_id == 'contact_message_feedback_form') {

    // Disable Cache on contact page.
    $form['#cache'] = [
      'contexts' => [],
      'max-age' => 0,
    ];
    // Autofill contact form.
    if (\Drupal::request()->query->has('product')) {
      $nid = \Drupal::request()->query->get('product');
      $node = Node::load($nid);
      if ($node) {
        $user = User::load(\Drupal::currentUser()->id());
        $check = $node->access('view', $user);
        if ($node->bundle() == 'd_product' && $check) {
          $alias = $node->toUrl()->setAbsolute()->toString();
          $subject = t(
            'I would like to ask about product @title',
            ['@title' => $node->getTitle()]
          );
          $subject = $subject->render();
          $subject = strlen($subject) > 100 ? substr($subject, 0, 97) . "..." : $subject;

          $message = t('I would like to ask about @title, link - @link', [
            '@title' => $node->getTitle(),
            '@link' => $alias,
          ]);
          $form['subject']['widget'][0]['value']['#default_value'] = $subject;
          $form['message']['widget'][0]['value']['#default_value'] = $message;
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function d_product_preprocess_page(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if (stripos($route_name, 'view.products_list') !== FALSE) {
    $pager_manager = \Drupal::service('pager.manager');
    if ($pager = $pager_manager->getPager(0)) {
      $variables['pager_total_items'] = $pager->getTotalItems();
    }
    $variables['#attached']['library'][] = 'd_product/d_product_searches';
  }

  // Remove title block from product listing and product page.
  $no_title_routes = [
    'entity.node.canonical',
    'entity.node.revision',
    'view.products_list.products_list',
  ];
  if (in_array($route_name, $no_title_routes)) {
    $node = $variables['node'] ?? NULL;
    if ($node && !($node instanceof NodeInterface)) {
      $node = Node::load($node);
    }
    if (!$node || $node->getType() == 'd_product') {
      foreach ($variables['page']['content'] as &$element) {
        if (isset($element['#plugin_id']) && $element['#plugin_id'] == 'page_title_block') {
          $element['#access'] = FALSE;
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function d_product_preprocess_pager(&$variables) {

  if (isset($variables['theme_hook_original']) && $variables['theme_hook_original'] == 'pager__products_list') {
    $pager_manager = \Drupal::service('pager.manager');
    $pages_count = $pager_manager->getPager(0)->getTotalPages();
    if (isset($variables['items']['pages'][$pages_count])) {
      unset($variables['items']['last']);
    }
    if (isset($variables['items']['last'])) {
      $variables['items']['last']['text'] = $pages_count;
    }
  }
}

/**
 * Implements hook_views_plugins_argument_alter().
 */
function d_product_views_plugins_argument_alter(array &$plugins) {
  $plugins['node_vid']['class'] = 'Drupal\d_product\Plugin\views\argument\NodeVid';
}

/**
 * Generate hook to change class for node 'product'.
 */
function d_product_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['node']['d_product'])) {
    $bundles['node']['d_product']['class'] = Product::class;
  }
}
