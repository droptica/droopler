<?php

/**
 * @file
 * Initialization of content for d_blog module.
 *
 * d_blog_init module.
 */

use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraph;
use \Drupal\taxonomy\Entity\Term;

/**
 * Save blog post.
 * @param $d_blog_post_title
 * @param $d_blog_teaser_text
 * @param $d_blog_paragraph_text
 * @param $images
 * @param $taxonomy
 */
function d_blog_init_save_blog_post(
  $d_blog_post_title,
  $d_blog_teaser_text,
  $d_blog_paragraph_text,
  $images,
  $taxonomy
) {
  $blog_post_1 = [
    'type' => 'blog_post',
    'title' => $d_blog_post_title,
    'field_blog_main_image' => $images[0],
    'field_blog_teaser' => $d_blog_teaser_text,
    'field_blog_category' => $taxonomy,
    'field_blog_sections' => [
      'paragraphs' => [
        [
          'paragraph_type' => 'd_p_blog_text',
          'data' => [
            'field_d_long_text' => [
              'type' => 'text',
              'data' => $d_blog_paragraph_text,
            ],
          ],
        ],
        [
          'paragraph_type' => 'd_p_blog_image',
          'data' => [
            'field_d_image' => [
              'type' => 'image',
              'data' => $images[1],
            ],
            'field_d_p_blog_image_full_width' => [
              'type' => 'boolean',
              'data' => TRUE,
            ],
          ],
        ],
        [
          'paragraph_type' => 'd_p_blog_text',
          'data' => [
            'field_d_long_text' => [
              'type' => 'text',
              'data' => $d_blog_paragraph_text,
            ],
          ],
        ],
        [
          'paragraph_type' => 'd_p_blog_image',
          'data' => [
            'field_d_image' => [
              'type' => 'image',
              'data' => $images[2],
            ],
          ],
        ],
      ],
    ],
  ];

  d_blog_init_save_node($blog_post_1, 'en');
}

/**
 * Save node with paragraphs.
 *
 * @param array $node_to_create
 *   Array node with paragraph content.
 * @param string $lang_code
 *   Lang code.
 */
function d_blog_init_save_node(array $node_to_create, $lang_code) {

  $node = Node::create(
    [
      'type' => $node_to_create['type'],
      'title' => $node_to_create['title'],
      'langcode' => $lang_code,
    ]
  );

  if (isset($node_to_create['field_blog_sections']['paragraphs'])) {
    foreach ($node_to_create['field_blog_sections']['paragraphs'] as $paragraph_data) {

      $paragraph = d_blog_init_fill_paragraph($paragraph_data);

      $node->field_blog_sections->appendItem($paragraph);
    }

    if (isset($node_to_create['field_blog_teaser'])) {
      $node->field_blog_teaser->appendItem($node_to_create['field_blog_teaser']);
    }

    if (isset($node_to_create['field_blog_main_image'])) {
      $image = d_blog_init_get_image($node_to_create['field_blog_main_image']);
      $node->field_blog_main_image->appendItem($image);
    }

    if (isset($node_to_create['field_blog_category'])) {
      $cat = $node_to_create['field_blog_category'];
      $terms = taxonomy_term_load_multiple_by_name($cat);

      // Create term and use it.
      if (empty($terms)) {
        $term = Term::create([
          'name' => $cat,
          'vid' => 'blog_posts_category',
        ]);

        $term->save();
        $terms = taxonomy_term_load_multiple_by_name($cat);

        foreach ($terms as $id => $term) {
          $node->field_blog_category->appendItem($id);
        }
      }
      else {
        foreach ($terms as $id => $term) {
          $node->field_blog_category->appendItem($term->id());
        }
      }
    }

    $node->save();
  }
}

/**
 * Fill paragraph with text.
 * @param $paragraph_data
 * @return $paragraph_object
 *
 */
function d_blog_init_fill_paragraph($paragraph_data) {
  $paragraph = Paragraph::create([
    'type' => $paragraph_data['paragraph_type'],
  ]);

  foreach ($paragraph_data['data'] as $field_name => $value) {
    switch ($value['type']) {
      case 'text':
        $paragraph->set($field_name, $value['data']);
        $paragraph->$field_name->format = 'full_html';
        break;

      case 'image':
        $image = d_blog_init_get_image($value['data']);
        $paragraph->$field_name->appendItem($image);
        break;

      case 'boolean':
        $paragraph->set($field_name, $value['data']);
        break;

      case 'entity_reference':
        $paragraph->set($field_name, $value['data']);
        break;
    }
  }

  $paragraph->save();
  return $paragraph;
}

/**
 * Get image.
 *
 * @param $imgName
 * @return bool|\Drupal\file\FileInterface|false|string
 */
function d_blog_init_get_image($imgName) {
  $imagePath = drupal_get_path('module', 'd_content_init') . '/assets/' . $imgName;
  $image = file_get_contents($imagePath);
  $image = file_save_data($image, 'public://' . $imgName, FILE_EXISTS_REPLACE);
  return $image;
}
