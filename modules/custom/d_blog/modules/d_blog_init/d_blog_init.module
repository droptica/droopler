<?php

/**
 * @file
 * d_blog_init module.
 */

use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraph;

/** Save node with paragraphs.
 *
 * @param array $node_to_create
 *   Array node with paragraph content.
 * @param string $lang_code
 *   Lang code.
 */
function d_blog_init_save_node($node_to_create, $lang_code) {

  $node = Node::create([
    'type' => $node_to_create['type'],
    'title' => $node_to_create['title'],
    'langcode' => $lang_code,
  ]);

  if (isset($node_to_create['field_blog_sections']['paragraphs'])) {
    foreach ($node_to_create['field_blog_sections']['paragraphs'] as $paragraph_data) {

      $paragraph = d_blog_init_fill_paragraph($paragraph_data);

      $node->field_blog_sections->appendItem($paragraph);
    }

    if(isset($node_to_create['field_blog_teaser'])) {
      $node->field_blog_teaser->appendItem($node_to_create['field_blog_teaser']);
    }

    if(isset($node_to_create['field_blog_main_image'])) {
        $image = d_blog_init_get_image($node_to_create['field_blog_main_image']);
        $node->field_blog_main_image->appendItem($image);
    }


    $node->save();
  }
}

/**
 * @param $paragraph_data
 *
 * @return $paragraph_object
 *
 */
function d_blog_init_fill_paragraph($paragraph_data) {
  $paragraph = Paragraph::create([
    'type' => $paragraph_data['paragraph_type'],
  ]);

  foreach ($paragraph_data['data'] as $field_name => $value) {

    switch ($value['type']) {
      case 'text':
        $paragraph->set($field_name, $value['data']);
        $paragraph->$field_name->format = 'full_html';
        break;
      case 'image':
        $image = d_blog_init_get_image($value['data']);
        $paragraph->$field_name->appendItem($image);
        break;
      case 'boolean':
          $paragraph->set($field_name, $value['data']);
          break;
      case 'entity_reference':
        $paragraph->set($field_name, $value['data']);
        break;
    }

  }

  $paragraph->save();

  return $paragraph;
}

/**
 * @param $value
 * @return bool|\Drupal\file\FileInterface|false|string
 */
function d_blog_init_get_image($imageName)
{
    $image = file_get_contents(drupal_get_path('module', 'd_blog_init') . '/assets/' . $imageName);
    $image = file_save_data($image, 'public://' . $imageName, FILE_EXISTS_REPLACE);
    return $image;
}