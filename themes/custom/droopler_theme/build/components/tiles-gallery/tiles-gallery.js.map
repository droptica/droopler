{"version":3,"file":"/components/tiles-gallery/tiles-gallery.js","mappings":"4iCAAA,SAAWA,EAAGC,GAEZ,aAYA,SAASC,EAAaC,EAAUC,GAI9BC,KAAKC,gBAAkB,CACrBC,aAAc,sBACdC,cAAe,wBACfC,eAAgB,wBAChBC,gBAAiB,+BACjBC,qBAAsB,qCACtBC,wBAAyB,wCACzBC,cAAe,eACfC,sBAAuB,qCAQzBT,KAAKD,SAAWJ,EAAEe,QAAO,EAAMV,KAAKC,gBAAiBF,GAAY,CAAC,GAOlEC,KAAKF,SAAWA,EAOhBE,KAAKW,QAAWX,KAAKF,SAASc,QAAQZ,KAAKD,SAASK,gBAOpDJ,KAAKa,SAAW,KAEhBb,KAAKc,cACLd,KAAKe,sBACP,CAKAlB,EAAamB,UAAUF,YAAc,WACnCd,KAAKa,SAAWb,KAAKF,SAASmB,QAAQ,CACpCf,aAAcF,KAAKD,SAASG,aAC5BgB,YAAalB,KAAKD,SAASI,cAC3BgB,iBAAiB,IAGnBnB,KAAKoB,oBAELpB,KAAKa,SAASI,QAAQ,SACxB,EAKApB,EAAamB,UAAUI,kBAAoB,WACzC,IAAMC,EAAOrB,KAEbA,KAAKa,SAASS,GAAG,kBAAkB,WACjCD,EAAKV,QAAQY,IAAI,aAAcF,EAAKvB,SAAS0B,UAE7CH,EAAKI,cACP,GACF,EAKA5B,EAAamB,UAAUS,aAAe,WACpC,IAAMC,EAAU1B,KAAKF,SAAS6B,KAAK3B,KAAKD,SAASS,eAC3CoB,EAAc5B,KAAKF,SAAS6B,KAAK3B,KAAKD,SAASU,uBAAuBe,SAE5EE,EAAQG,MAAK,WACXlC,EAAEK,MAAMuB,IAAI,SAAUK,EAAc,KACtC,GACF,EAKA/B,EAAamB,UAAUD,qBAAuB,WAC5C,IAAMM,EAAOrB,KAEbA,KAAKF,SAAS6B,KAAK3B,KAAKD,SAASG,cAAc2B,MAAK,WAClD,IAAMC,EAASnC,EAAEK,MAAM2B,KAAK,OAE5B,GAAqB,GAAjBG,EAAOC,OAAX,CAMA,IAAwDC,EAAAC,EAAhCH,EAAOI,KAAK,OAAOC,MAAM,IAAK,GAAE,GAAnDC,EAAKJ,EAAA,GAAEK,EAAQL,EAAA,QAENM,IAAVF,GACFzC,EAAEK,MAAM2B,KAAKN,EAAKtB,SAASO,sBAAsBiC,KAAKH,QAGvCE,IAAbD,GACF1C,EAAEK,MAAM2B,KAAKN,EAAKtB,SAASQ,yBAAyBgC,KAAKF,EAT3D,MAHE1C,EAAEK,MAAM2B,KAAKN,EAAKtB,SAASM,iBAAiBmC,QAchD,GACF,EAUA3C,EAAa4C,gBAAkB,SAAU1C,GACvC,OAAOC,KAAK6B,MAAK,WACf,IAAIhC,EAAaF,EAAEK,MAAOD,EAC5B,GACF,EAEAJ,EAAE+C,GAAGC,aAAe9C,EAAa4C,gBAKjC7C,EAAOgD,UAAUD,aAAe,CAC9BE,OAAQ,SAAUC,GAChBnD,EAAEoD,KAAK,gBAAiB,iBAAkBD,IAAUH,cACtD,EAGH,CAzJD,CAyJGK,OAAQpD,O","sources":["webpack://Droopler_theme/./src/components/tiles-gallery/tiles-gallery.js"],"sourcesContent":["(function ($, Drupal) {\n\n  'use strict'\n\n  /**\n   * TilesGallery 'class'.\n   *\n   * @param {jQuery} $wrapper\n   *   Main wrapper of tiles gallery..\n   * @param {object} settings\n   *   Object with settings to override default with.\n   *\n   * @constructor\n   */\n  function TilesGallery($wrapper, settings) {\n    /**\n     * Default settings.\n     */\n    this.defaultSettings = {\n      itemSelector: '.tiles-gallery-item',\n      sizerSelector: '.tiles-gallery__sizer',\n      parentSelector: '.tiles-gallery-parent',\n      captionSelector: '.tiles-gallery-item__caption',\n      captionTitleSelector: '.tiles-gallery-item__caption-title',\n      captionSubtitleSelector: '.tiles-gallery-item__caption-subtitle',\n      videoSelector: '.video-embed',\n      standardImageSelector: '.tiles-gallery-item--standard img',\n    }\n\n    /**\n     * Apply custom settings.\n     *\n     * @type {object}\n     */\n    this.settings = $.extend(true, this.defaultSettings, settings || {});\n\n    /**\n     * Main wrapper.\n     *\n     * @type {jQuery}\n     */\n    this.$wrapper = $wrapper;\n\n    /**\n     * Parent item.\n     *\n     * @type {jQuery}\n     */\n    this.$parent  = this.$wrapper.closest(this.settings.parentSelector);\n\n    /**\n     * Item with masonry initialized.\n     *\n     * @type {jQuery}\n     */\n    this.$masonry = null;\n\n    this.initMasonry();\n    this.prepareTilesCaptions();\n  }\n\n  /**\n   * Init masonry.\n   */\n  TilesGallery.prototype.initMasonry = function () {\n    this.$masonry = this.$wrapper.masonry({\n      itemSelector: this.settings.itemSelector,\n      columnWidth: this.settings.sizerSelector,\n      percentPosition: true,\n    });\n\n    this.bindMasonryEvents();\n\n    this.$masonry.masonry('layout');\n  };\n\n  /**\n   * Bind masonry events.\n   */\n  TilesGallery.prototype.bindMasonryEvents = function () {\n    const self = this;\n\n    this.$masonry.on('layoutComplete', function () {\n      self.$parent.css('min-height', self.$wrapper.height());\n\n      self.resizeVideos();\n    });\n  };\n\n  /**\n   * Resize videos.\n   */\n  TilesGallery.prototype.resizeVideos = function () {\n    const $videos = this.$wrapper.find(this.settings.videoSelector);\n    const imageHeight = this.$wrapper.find(this.settings.standardImageSelector).height();\n\n    $videos.each(function () {\n      $(this).css('height', imageHeight + 'px');\n    });\n  };\n\n  /**\n   * Prepare tiles captions.\n   */\n  TilesGallery.prototype.prepareTilesCaptions = function () {\n    const self = this;\n\n    this.$wrapper.find(this.settings.itemSelector).each(function () {\n      const $image = $(this).find('img');\n\n      if ($image.length == 0) {\n        $(this).find(self.settings.captionSelector).remove();\n\n        return;\n      }\n\n      let [title, subtitle] = $image.attr('alt').split('/', 2);\n\n      if (title !== undefined) {\n        $(this).find(self.settings.captionTitleSelector).text(title);\n      }\n\n      if (subtitle !== undefined) {\n        $(this).find(self.settings.captionSubtitleSelector).text(subtitle);\n      }\n    });\n  };\n\n  /**\n   * A jQuery interface.\n   *\n   * @param {object} settings\n   *   Object with settings to override defaults with.\n   *\n   * @returns {jQuery}\n   */\n  TilesGallery.jQueryInterface = function (settings) {\n    return this.each(function () {\n      new TilesGallery($(this), settings);\n    });\n  };\n\n  $.fn.tilesGallery = TilesGallery.jQueryInterface;\n\n  /**\n   * Main behavior for tiles gallery.\n   */\n  Drupal.behaviors.tilesGallery = {\n    attach: function (context) {\n      $(once('tiles-gallery', '.tiles-gallery', context)).tilesGallery();\n    }\n  };\n\n})(jQuery, Drupal);\n"],"names":["$","Drupal","TilesGallery","$wrapper","settings","this","defaultSettings","itemSelector","sizerSelector","parentSelector","captionSelector","captionTitleSelector","captionSubtitleSelector","videoSelector","standardImageSelector","extend","$parent","closest","$masonry","initMasonry","prepareTilesCaptions","prototype","masonry","columnWidth","percentPosition","bindMasonryEvents","self","on","css","height","resizeVideos","$videos","find","imageHeight","each","$image","length","_$image$attr$split2","_slicedToArray","attr","split","title","subtitle","undefined","text","remove","jQueryInterface","fn","tilesGallery","behaviors","attach","context","once","jQuery"],"sourceRoot":""}