{"version":3,"file":"/components/navigation-mobile/navigation-mobile.js","mappings":"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","sources":["webpack://Droopler_theme/./src/components/navigation-mobile/navigation-mobile.js"],"sourcesContent":["(function ($, Drupal) {\n\n  'use strict';\n\n  /**\n   * Navigation mobile 'class'.\n   *\n   * @param {jQuery} $wrapper\n   *   Main wrapper of tiles gallery.\n   * @param {object} settings\n   *   Object with settings to override default with.\n   *\n   * @constructor\n   */\n  function NavigationMobile($wrapper, settings) {\n    /**\n     * Default settings.\n     */\n    this.defaultSettings = {\n      bodyMenuOpenClass: 'overflow-hidden',\n      menuToggleItemSelector: '.hamburger',\n      menuOverlaySelector: '.navigation-mobile__overlay',\n      menuItemWithSubmenuSelector: '.menu-item--has-submenu',\n      submenuToggleItemSelector: '.menu-item__toggler',\n      submenuSelector: '.submenu',\n      childMenuItemWithSubmenuSelector: '.submenu-item--has-submenu',\n      childSubmenuToggleSelector: '.submenu-item__toggler',\n      openClass: 'open',\n    };\n\n    /**\n     * Apply custom settings.\n     *\n     * @type {object}\n     */\n    this.settings = $.extend(true, this.defaultSettings, settings || {});\n\n    /**\n     * Main wrapper.\n     *\n     * @type {jQuery}\n     */\n    this.$wrapper = $wrapper;\n\n    /**\n     * Menu toggle item.\n     *\n     * @type {jQuery}\n     */\n    this.$menuToggleItem = $(this.settings.menuToggleItemSelector);\n\n    /**\n     * Submenu toggle item for main menu items.\n     *\n     * @type {jQuery}\n     */\n    this.$submenuToggleItem = $wrapper.find(this.settings.submenuToggleItemSelector);\n\n    /**\n     * Submenu toggle item for submenu items (nested).\n     *\n     * @type {jQuery}\n     */\n    this.$childSubmenuToggleItem = $wrapper.find(this.settings.childSubmenuToggleSelector);\n\n    /**\n     * Overlay.\n     *\n     * @type {jQuery}\n     */\n    this.$overlay = $wrapper.find(this.settings.menuOverlaySelector);\n\n    this.bindNavigationToggleAction();\n    this.bindNavigationSubmenuToggleAction();\n    this.bindChildSubmenuItemToggleAction();\n    this.openActiveSubmenu();\n  }\n\n  /**\n   * Bind navigation toggle action.\n   */\n  NavigationMobile.prototype.bindNavigationToggleAction = function () {\n    const self = this;\n\n    this.$menuToggleItem.click(function () {\n      $(this).toggleClass(self.settings.openClass);\n      self.$wrapper.toggleClass(self.settings.openClass);\n      $('body').toggleClass(self.settings.bodyMenuOpenClass);\n    });\n\n    this.$overlay.click(function () {\n      $(self.$menuToggleItem).trigger('click');\n    });\n  };\n\n  /**\n   * Bind navigation submenu toggle action.\n   */\n  NavigationMobile.prototype.bindNavigationSubmenuToggleAction = function () {\n    const self = this;\n\n    this.$submenuToggleItem.click(function (event) {\n      event.stopPropagation();\n      const $parentMenuItem = $(this).closest(self.settings.menuItemWithSubmenuSelector);\n      $parentMenuItem.toggleClass(self.settings.openClass);\n      $parentMenuItem.find(self.settings.submenuSelector).first().toggleClass(self.settings.openClass);\n    });\n  };\n\n  /**\n   * Bind submenu item toggle action for nested submenu items.\n   */\n  NavigationMobile.prototype.bindChildSubmenuItemToggleAction = function () {\n    const self = this;\n\n    this.$childSubmenuToggleItem.click(function (event) {\n      event.stopPropagation();\n      const $childSubmenuItem = $(this).closest(self.settings.childMenuItemWithSubmenuSelector);\n      $childSubmenuItem.toggleClass(self.settings.openClass);\n      $childSubmenuItem.find(self.settings.submenuSelector).first().toggleClass(self.settings.openClass);\n    });\n  };\n\n  /**\n   * A jQuery interface.\n   *\n   * @param {object} settings\n   *   Object with settings to override defaults with.\n   *\n   * @returns {jQuery}\n   */\n  NavigationMobile.jQueryInterface = function (settings) {\n    return this.each(function () {\n      new NavigationMobile($(this), settings);\n    });\n  };\n\n    /**\n     * Opens active submenu.\n     */\n    NavigationMobile.prototype.openActiveSubmenu = function () {\n      const $activeMenuItem = this.$wrapper.find('.menu-item--active, .submenu-item--active');\n\n      if ($activeMenuItem.length) {\n        $activeMenuItem.removeClass('open');\n\n        if ($activeMenuItem.hasClass('menu-item--active')) {\n          $activeMenuItem.parents('.menu-item--has-submenu').addClass('open');\n          $activeMenuItem.parents('.menu-item--has-submenu').find('.submenu').first().addClass('open');\n        }\n\n        if ($activeMenuItem.hasClass('submenu-item--active')) {\n          $activeMenuItem.parents('.submenu-item--has-submenu, .menu-item--has-submenu').each(function() {\n            $(this).addClass('open');\n            $(this).find('.submenu').first().addClass('open');\n            $(this).removeClass('submenu-item--active');\n          });\n        }\n      }\n    };\n\n  $.fn.navigationMobile = NavigationMobile.jQueryInterface;\n\n  /**\n   * Main behavior for navigation mobile.\n   */\n  Drupal.behaviors.navigationMobile = {\n    attach: function (context) {\n      $(once('navigation-mobile', '.navigation-mobile', context)).each(function() {\n        var navigationMobileInstance = new NavigationMobile($(this), {\n          openingItemSelector: '.hamburger',\n          childMenuItemWithSubmenuSelector: '.submenu-item--has-submenu',\n          childSubmenuToggleSelector: '.submenu-item__toggler',\n        });\n      });\n    }\n  }\n\n})(jQuery, Drupal);\n"],"names":["$","Drupal","NavigationMobile","$wrapper","settings","this","defaultSettings","bodyMenuOpenClass","menuToggleItemSelector","menuOverlaySelector","menuItemWithSubmenuSelector","submenuToggleItemSelector","submenuSelector","childMenuItemWithSubmenuSelector","childSubmenuToggleSelector","openClass","extend","$menuToggleItem","$submenuToggleItem","find","$childSubmenuToggleItem","$overlay","bindNavigationToggleAction","bindNavigationSubmenuToggleAction","bindChildSubmenuItemToggleAction","openActiveSubmenu","prototype","self","click","toggleClass","trigger","event","stopPropagation","$parentMenuItem","closest","first","$childSubmenuItem","jQueryInterface","each","$activeMenuItem","length","removeClass","hasClass","parents","addClass","fn","navigationMobile","behaviors","attach","context","once","openingItemSelector","jQuery"],"sourceRoot":""}